"use strict";

var setFunctionNameAndLength = require("./_setFunctionNameAndLength");

var wrapApply = require('./wrapApply');

var slice = Array.prototype.slice;

var nodeify = function nodeify(fn) {
  return setFunctionNameAndLength(function () {
    var last = arguments.length - 1;
    var cb;

    if (last < 0 || typeof (cb = arguments[last]) !== "function") {
      throw new TypeError("missing callback");
    }

    var args = slice.call(arguments, 0, last);
    wrapApply(fn, args).then(function (value) {
      return cb(undefined, value);
    }, cb);
  }, fn.name, fn.length + 1);
};

module.exports = nodeify;